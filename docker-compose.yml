services:
  eventoasis:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event_oasis_container
    networks:
      - event_management_network
    ports:
      - '8000:8000'
    environment:
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=event_management_system_db
      - DATABASE_HOST=event_management_db
      - DATABASE_PORT=5432
      - DATABASE_SYNC=true
      - DATABASE_AUTOLOAD=true
      - DATABASE_LOGGING=true
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8000
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=1h
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=604800
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
    volumes:
      - .:/app
      - /app/node_modules
    # depends_on:
    #   event-management-db:
    #   redis:

  event-management-db:
    image: postgres:15-alpine
    container_name: event_management_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: event_management_system_db
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
      POSTGRES_PORT: 5432
    ports:
      - '5432:5432'
    networks:
      - event_management_network
    volumes:
      - event_management_data:/var/lib/postgresql/data
    # healthcheck:
    #   test: ['CMD-SHELL', 'pg_isready -U']
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  redis:
    image: redis:8.0-alpine
    container_name: redis_container
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    command:
      [
        'redis-server',
        '--requirepass',
        '${REDIS_PASSWORD:-your_secure_redis_password}',
      ]
    networks:
      - event_management_network
    volumes:
      - redis_data:/data
    # healthcheck:
    #   test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

volumes:
  redis_data:
    name: redis_data
    driver: local
  event_management_data:
    name: event_management_data
    driver: local

networks:
  event_management_network:
    driver: bridge
